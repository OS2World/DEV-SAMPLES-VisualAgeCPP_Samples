/*******************************************************************************
* FILE NAME: Customer.cpp                                                      *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     Customer- Customer                                                       *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _CUSTOMER_
#include "Customer.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (Customer::readyId)
const INotificationId Customer::readyId = "Customer::readyId";

//------------------------------------------------------------------------------
// Customer :: Customer
//------------------------------------------------------------------------------
#pragma export (Customer::Customer())
Customer::Customer()
{

}     //end constructor


//------------------------------------------------------------------------------
// Customer :: ~Customer
//------------------------------------------------------------------------------
#pragma export (Customer::~Customer())
Customer::~Customer()
{

}

//------------------------------------------------------------------------------
// Customer :: initializePart
//------------------------------------------------------------------------------
#pragma export (Customer::initializePart())
Customer & Customer::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// Customer :: makeConnections
//------------------------------------------------------------------------------
#pragma export (Customer::makeConnections())
Boolean Customer::makeConnections()
{
   this->enableNotification();

   return true;
}


#include "customer.cpv"
